"""empty message

Revision ID: 1f22dabe20a9
Revises: 
Create Date: 2024-08-07 17:16:15.455466

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1f22dabe20a9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gt_group_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=30), nullable=False),
    sa.Column('user_ids', sa.String(length=500), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('create_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id'),
    comment='GitLab group id 별 user 매핑'
    )
    with op.batch_alter_table('ag_command_master', schema=None) as batch_op:
        batch_op.alter_column('interval_type',
               existing_type=postgresql.INTERVAL(),
               type_=sa.Enum('minutes', 'hours', 'days', name='intervaltypeenum'),
               existing_nullable=True)

    with op.batch_alter_table('mw_was', schema=None) as batch_op:
        batch_op.add_column(sa.Column('was_text', sa.Text(), nullable=True, comment='변경전 WAS 정보'))

    with op.batch_alter_table('mw_was_change_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('old_was_text', sa.Text(), nullable=True, comment='변경전 WAS 정보'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mw_was_change_history', schema=None) as batch_op:
        batch_op.drop_column('old_was_text')

    with op.batch_alter_table('mw_was', schema=None) as batch_op:
        batch_op.drop_column('was_text')

    with op.batch_alter_table('ag_command_master', schema=None) as batch_op:
        batch_op.alter_column('interval_type',
               existing_type=sa.Enum('minutes', 'hours', 'days', name='intervaltypeenum'),
               type_=postgresql.INTERVAL(),
               existing_nullable=True)

    op.drop_table('gt_group_users')
    # ### end Alembic commands ###
